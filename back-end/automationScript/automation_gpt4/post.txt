Here is my postControllers.js:
const { sequelize } = require('../config/database');
const createPostModel = require('../models/postModel');
const Post = createPostModel(sequelize);
const cloudinary = require('../config/cloudinaryConfig');

const createNewPost = async (req, res) => {
  try {
    const { user_id } = req.body;
    if (!req.file) {
      return res.status(400).json({ error: 'No image provided' });
    }
    const imageResponse = await cloudinary.uploader.upload(req.file.path, {
      folder: `posts/${user_id}`,
      use_filename: true,
      unique_filename: false,
      resource_type: 'image',
    });    
    const imageUrl = imageResponse.secure_url;
    const newPost = await Post.create({
      content: imageUrl,
      user_id,
    });
    res.status(201).json(newPost);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Internal server error' });
  }
};

const retrievePost = async (req, res) => {
  console.log(req.params.id);
  const post = await Post.findOne({ where: { id: req.params.id } });
  if (!post) {
    return res.status(404).json({ message: 'Post not found' });
  }
  return res.status(200).json(post);
};

const updatePost = async (req, res) => {
  const { content } = req.body;
  console.log(req.params.id);
  const [updateCount, updatedPosts] = await Post.update({ content }, {
    where: { id: req.params.id },
    returning: true,
  });
  if (updateCount === 0) {
    return res.status(404).json({ message: 'Post not found' });
  }
  const updatedPost = updatedPosts[0];
  return res.status(200).json(updatedPost);
};

const deletePost = async (req, res) => {
  const post = await Post.destroy({ where: { id: req.params.id }});
  if (post === 0) {
    return res.status(404).json({ message: 'Post not found' });
  }
  return res.status(200).json({ message: 'Post deleted successfully' });
};

const listAllPosts = async (req, res) => {
  const posts = await Post.findAll();
  return res.status(200).json(posts);
};

const listAllPostsFromUser = async (req, res) => {
  const posts = await Post.findAll({ where: { user_id: req.params.user_id } });
  return res.status(200).json(posts);
};

module.exports = {
  createNewPost,
  retrievePost,
  updatePost,
  deletePost,
  listAllPosts,
  listAllPostsFromUser
};


And here is my postRoutes.js:
const postRouter = require('express').Router();
const { createNewPost, retrievePost, updatePost, deletePost, listAllPosts, listAllPostsFromUser } = require('../controllers/postControllers');
const multer = require('multer');
const upload = multer({ dest: 'uploads/' });

postRouter.post('/posts', upload.single('image'), createNewPost);
postRouter.get('/posts/:id', retrievePost);
postRouter.put('/posts/:id', updatePost);
postRouter.delete('/posts/:id', deletePost);
postRouter.get('/posts', listAllPosts);
postRouter.get('/users/:user_id/posts', listAllPostsFromUser);

module.exports = postRouter;


Using the JSON Body, make requests to test all the routes. Also show me the expected response.
